{"version":3,"file":"static/js/502.11f50119.chunk.js","mappings":"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","sources":["components/CastListItem/CastListItem.jsx","components/CastList/CastList.jsx","services/API.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CastListItem = ({ profilePath, originalName, name }) => {\n  return (\n    <li>\n      <img\n        width=\"200\"\n        height=\"300\"\n        src={\n          profilePath\n            ? `https://image.tmdb.org/t/p/w300${profilePath}`\n            : `https://fakeimg.pl/600x400?text=No+Image+Available`\n        }\n        alt={originalName}\n      />\n      <p>{name}</p>\n    </li>\n  );\n}\n\nCastListItem.propTypes = {\n  profilePath: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  originalName: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};","import React, { useEffect, useState } from 'react';\nimport { fetchMovieCast } from 'services/API';\nimport { useParams } from 'react-router-dom';\nimport { CastListItem } from 'components/CastListItem/CastListItem';\n\nconst CastList = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const fetchedMovieCast = await fetchMovieCast(movieId);\n        setCast(fetchedMovieCast);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieCast();\n  }, [movieId]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {cast.length !== 0 ? (\n        <div>\n          <h2>Movie Cast</h2>\n          <ul>\n            {cast.map(({ id, profile_path, original_name, name }) => {\n              return (\n                <CastListItem\n                  key={id}\n                  profilePath={profile_path}\n                  originalName={original_name}\n                  name={name}\n                />\n              );\n            })}\n          </ul>\n        </div>\n      ) : (\n        <div>We don't have any cast for this movie.</div>\n      )}\n    </>\n  );\n}\n\nexport default CastList;","import axios from \"axios\";\n\nconst API_KEY = '9a93fafee80d0eeb785aed4df0b34b19';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["CastListItem","_ref","profilePath","originalName","name","_jsxs","children","_jsx","width","height","src","concat","alt","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","getMovieCast","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovieCast","_context","prev","next","fetchMovieCast","sent","t0","console","log","stop","apply","arguments","_Fragment","length","map","_ref2","id","profile_path","original_name","axios","api_key","fetchTrendingMovies","response","abrupt","data","results","fetchMovieByQuery","_callee2","movieName","_context2","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}